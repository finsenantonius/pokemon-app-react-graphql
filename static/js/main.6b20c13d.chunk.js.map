{"version":3,"sources":["assets/pokeball.png","components/Header.js","graphql/Queries.js","components/PokemonCard.js","pages/PokemonList.js","components/TypesTag.js","components/PokemonStats.js","components/PokemonInput.js","components/PokemonData.js","components/SkeletonPokemonData.js","pages/PokemonDetail.js","pages/UserPokemon.js","App.js","index.js"],"names":["Nav","styled","nav","position","top","left","right","height","backgroundColor","display","justifyContent","alignItems","padding","Icon","img","width","Header","to","src","icon","alt","GET_POKEMONS","gql","GET_POKEMON_DATA","Container","div","borderRadius","marginBottom","boxShadow","cursor","Image","marginRight","Name","label","fontWeight","PokemonCard","pokemon","name","charAt","toUpperCase","slice","image","faChevronRight","section","overflow","flexDirection","minHeight","Content","boxSizing","maxWidth","marginTop","PokemonList","useState","pokemons","setPokemons","countPokemon","setCountPokemon","data","useQuery","variables","limit","useEffect","localData","localStorage","getItem","JSON","parse","length","console","log","results","map","id","Text","p","fontSize","margin","color","TypesTag","type","Item","Label","PokemonStats","stats","base_stat","Input","input","fontFamily","border","Button","button","PokemonInput","setNickname","submitPokemon","onChange","e","target","value","onClick","DataContainer","marginLeft","TypesContainer","SegmentData","MovesData","PokemonData","userPokemon","setUserPokemon","open","setOpen","nickname","pokemonMoves","moves","setItem","stringify","sprites","front_default","types","move","replace","chance","Math","random","some","alert","SkeletonPokemonData","count","PokemonDetail","setPokemon","pageURL","useLocation","pathname","latURLSegment","substr","lastIndexOf","toString","UserPokemon","App","exact","path","client","ApolloClient","cache","InMemoryCache","uri","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b20c13d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokeball.dec3b7c9.png\";","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport icon from \"../assets/pokeball.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Nav>\r\n      <Link to=\"/\">\r\n        <h3>Pokemon</h3>\r\n      </Link>\r\n      <Icon src={icon} alt=\"pokeball\" />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst Nav = styled.nav({\r\n  position: \"fixed\",\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  height: \"60px\",\r\n  backgroundColor: \"#FDFD96\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  padding: \"0 16px\",\r\n});\r\n\r\nconst Icon = styled.img({\r\n  width: 22,\r\n  height: 22,\r\n});\r\n\r\nexport default Header;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_POKEMONS = gql`\r\n  query pokemons($limit: Int!) {\r\n    pokemons(limit: $limit) {\r\n      results {\r\n        id\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_POKEMON_DATA = gql`\r\n  query pokemon($name: String!) {\r\n    pokemon(name: $name) {\r\n      id\r\n      name\r\n      sprites {\r\n        front_default\r\n      }\r\n      stats {\r\n        base_stat\r\n        stat {\r\n          name\r\n        }\r\n      }\r\n      moves {\r\n        move {\r\n          name\r\n        }\r\n      }\r\n      types {\r\n        type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PokemonCard = ({ pokemon }) => {\r\n  const firstLetter = pokemon.name.charAt(0).toUpperCase();\r\n  const splitStr = pokemon.name.slice(1);\r\n  const name = firstLetter + splitStr;\r\n\r\n  return (\r\n    <Link to={`/detail/${pokemon.name}`}>\r\n      <Container>\r\n        <Image src={pokemon.image} />\r\n        <Name>{name}</Name>\r\n        <FontAwesomeIcon icon={faChevronRight} />\r\n      </Container>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst Container = styled.div({\r\n  width: \"100%\",\r\n  borderRadius: 4,\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  marginBottom: 20,\r\n  boxShadow: \"2px 2px 8px rgba(111, 111, 111, 0.2)\",\r\n  padding: \"12px\",\r\n  cursor: \"pointer\",\r\n});\r\n\r\nconst Image = styled.img({\r\n  width: 60,\r\n  height: 60,\r\n  marginRight: 14,\r\n});\r\n\r\nconst Name = styled.label({\r\n  fontWeight: \"bold\",\r\n  marginRight: \"auto\",\r\n});\r\n\r\nexport default PokemonCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_POKEMONS } from \"../graphql/Queries\";\r\n\r\nimport PokemonCard from \"../components/PokemonCard\";\r\n\r\nconst PokemonList = () => {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [countPokemon, setCountPokemon] = useState();\r\n\r\n  const { data } = useQuery(GET_POKEMONS, {\r\n    variables: { limit: 20 },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const localData = localStorage.getItem(\"_user_pokemon\");\r\n    setCountPokemon(localData ? JSON.parse(localData).length : 0);\r\n    if (data) {\r\n      console.log(data.pokemons.results);\r\n      setPokemons(data.pokemons.results);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <h3>Pokemon owned: {countPokemon}</h3>\r\n        {pokemons &&\r\n          pokemons.map((pokemon) => (\r\n            <PokemonCard pokemon={pokemon} key={pokemon.id} />\r\n          ))}\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.section({\r\n  overflow: \"hidden\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  minHeight: \"100vh\",\r\n});\r\n\r\nconst Content = styled.div({\r\n  width: \"100%\",\r\n  minHeight: \"100vh\",\r\n  boxSizing: \"border-box\",\r\n  padding: \"16px\",\r\n  maxWidth: \"650px\",\r\n  marginTop: \"60px\",\r\n});\r\n\r\nexport default PokemonList;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst TypesTag = ({ type }) => {\r\n  return (\r\n    <Container>\r\n      <Text>{type.type.name}</Text>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div({\r\n  width: 80,\r\n  marginRight: 4,\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  backgroundColor: \"whitesmoke\",\r\n  borderRadius: 10,\r\n});\r\n\r\nconst Text = styled.p({\r\n  fontSize: 14,\r\n  margin: 0,\r\n  color: \"black\",\r\n});\r\n\r\nexport default TypesTag;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst PokemonStats = ({ stats }) => {\r\n  return (\r\n    <Container>\r\n      <Item>\r\n        <Label>HP</Label>\r\n        <Text>{stats[0].base_stat}</Text>\r\n      </Item>\r\n      <Item>\r\n        <Label>Attack</Label>\r\n        <Text>{stats[1].base_stat}</Text>\r\n      </Item>\r\n      <Item>\r\n        <Label>Defense</Label>\r\n        <Text>{stats[2].base_stat}</Text>\r\n      </Item>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div({\r\n  display: \"flex\",\r\n});\r\n\r\nconst Item = styled.div({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  marginRight: \"20px\",\r\n});\r\n\r\nconst Label = styled.label({\r\n  fontSize: 16,\r\n  fontWeight: \"bold\",\r\n});\r\n\r\nconst Text = styled.p({\r\n  fontSize: 16,\r\n  margin: 0,\r\n  color: \"black\",\r\n});\r\n\r\nexport default PokemonStats;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst PokemonInput = ({ setNickname, submitPokemon }) => {\r\n  return (\r\n    <Container>\r\n      <Label>Success get new pokemon! Please input nickname: </Label>\r\n      <Input type=\"text\" onChange={(e) => setNickname(e.target.value)}></Input>\r\n      <Button onClick={submitPokemon}>Submit</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n});\r\nconst Label = styled.label({\r\n  fontSize: 14,\r\n  fontWeight: \"bold\",\r\n  marginBottom: 4,\r\n});\r\nconst Input = styled.input({\r\n  height: \"40\",\r\n  fontSize: 14,\r\n  padding: 12,\r\n  fontFamily: \"Poppins\",\r\n  marginBottom: 12,\r\n  border: \"2px solid black\",\r\n  borderRadius: 4,\r\n});\r\nconst Button = styled.button({\r\n  height: \"50px\",\r\n  borderRadius: \"7px\",\r\n  backgroundColor: \"#FDFD96\",\r\n  border: \"none\",\r\n  cursor: \"pointer\",\r\n  fontFamily: \"Poppins\",\r\n  fontSize: 16,\r\n  fontWeight: \"bold\",\r\n});\r\n\r\nexport default PokemonInput;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport TypesTag from \"../components/TypesTag\";\r\nimport PokemonStats from \"../components/PokemonStats\";\r\nimport PokemonInput from \"../components/PokemonInput\";\r\n\r\nconst PokemonData = ({ pokemon, userPokemon, setUserPokemon }) => {\r\n  const [open, setOpen] = useState(null);\r\n  const [nickname, setNickname] = useState();\r\n\r\n  const pokemonMoves = pokemon.moves.slice(0, 5);\r\n  const firstLetter = pokemon.name.charAt(0).toUpperCase();\r\n  const splitStr = pokemon.name.slice(1);\r\n  const name = firstLetter + splitStr;\r\n\r\n  const catchPokemon = () => {\r\n    let chance = Math.random() < 0.5;\r\n    if (chance === true) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const submitPokemon = () => {\r\n    if (userPokemon.some((pokemon) => pokemon.nickname === nickname)) {\r\n      alert(\"nickname already exist\");\r\n    } else {\r\n      const data = {\r\n        nickname: nickname,\r\n        name: name,\r\n        image: pokemon.sprites.front_default,\r\n      };\r\n      setUserPokemon((userPokemon) => [...userPokemon, data]);\r\n    }\r\n  };\r\n\r\n  localStorage.setItem(\"_user_pokemon\", JSON.stringify(userPokemon));\r\n  return (\r\n    <>\r\n      <SegmentData>\r\n        <Image src={pokemon.sprites.front_default} alt=\"front\" />\r\n        <DataContainer>\r\n          <Label>{name}</Label>\r\n          <TypesContainer>\r\n            {pokemon.types.map((type) => {\r\n              return <TypesTag type={type} key={type.type.name} />;\r\n            })}\r\n          </TypesContainer>\r\n          <PokemonStats stats={pokemon.stats} />\r\n        </DataContainer>\r\n      </SegmentData>\r\n      <MovesData>\r\n        <Label>Moves</Label>\r\n        {pokemonMoves.map((move) => {\r\n          return (\r\n            <Text key={move.move.name}>{move.move.name.replace(\"-\", \" \")}</Text>\r\n          );\r\n        })}\r\n      </MovesData>\r\n      {!open ? <Button onClick={catchPokemon}>Catch</Button> : null}\r\n      {open ? (\r\n        <PokemonInput setNickname={setNickname} submitPokemon={submitPokemon} />\r\n      ) : open === false ? (\r\n        <p>agagal</p>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst DataContainer = styled.div({\r\n  marginLeft: 20,\r\n});\r\n\r\nconst TypesContainer = styled.div({\r\n  display: \"flex\",\r\n  margin: \"12px 0px\",\r\n});\r\n\r\nconst Image = styled.img({\r\n  width: 150,\r\n});\r\n\r\nconst Label = styled.label({\r\n  fontSize: 20,\r\n  fontWeight: \"bold\",\r\n});\r\n\r\nconst Text = styled.p({\r\n  margin: \"4px 0px\",\r\n});\r\n\r\nconst SegmentData = styled.div({\r\n  display: \"flex\",\r\n});\r\n\r\nconst MovesData = styled.div({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  marginBottom: 16,\r\n});\r\n\r\nconst Button = styled.button({\r\n  height: \"50px\",\r\n  borderRadius: \"7px\",\r\n  backgroundColor: \"#FDFD96\",\r\n  border: \"none\",\r\n  cursor: \"pointer\",\r\n  fontFamily: \"Poppins\",\r\n  fontSize: 16,\r\n  fontWeight: \"bold\",\r\n  marginBottom: 12,\r\n});\r\n\r\nexport default PokemonData;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst SkeletonPokemonData = () => {\r\n  return (\r\n    <>\r\n      <SegmentData>\r\n        <Skeleton width={150} height={150} />\r\n        <DataContainer>\r\n          <Skeleton width={150} height={25} />\r\n          <TypesContainer>\r\n            <Skeleton width={150} height={25} />\r\n          </TypesContainer>\r\n          <Skeleton width={150} height={50} />\r\n        </DataContainer>\r\n      </SegmentData>\r\n      <MovesData>\r\n        <Label>Moves</Label>\r\n        <Skeleton width={\"100%\"} height={23} count={5} />\r\n      </MovesData>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DataContainer = styled.div({\r\n  marginLeft: 20,\r\n});\r\n\r\nconst TypesContainer = styled.div({\r\n  display: \"flex\",\r\n  margin: \"12px 0px\",\r\n});\r\n\r\nconst SegmentData = styled.div({\r\n  display: \"flex\",\r\n});\r\n\r\nconst MovesData = styled.div({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  marginBottom: 16,\r\n});\r\n\r\nconst Label = styled.label({\r\n  width: \"100%\",\r\n  fontSize: 20,\r\n  fontWeight: \"bold\",\r\n});\r\n\r\nexport default SkeletonPokemonData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_POKEMON_DATA } from \"../graphql/Queries\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PokemonData from \"../components/PokemonData\";\r\nimport SkeletonPokemonData from \"../components/SkeletonPokemonData\";\r\n\r\nconst PokemonDetail = () => {\r\n  const [pokemon, setPokemon] = useState();\r\n  const [userPokemon, setUserPokemon] = useState([]);\r\n  const location = useLocation();\r\n  const pageURL = location.pathname;\r\n  const latURLSegment = pageURL.substr(pageURL.lastIndexOf(\"/\") + 1).toString();\r\n\r\n  const { data } = useQuery(GET_POKEMON_DATA, {\r\n    variables: { name: `${latURLSegment}` },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const localData = localStorage.getItem(\"_user_pokemon\");\r\n    setUserPokemon(localData ? JSON.parse(localData) : []);\r\n    if (data) {\r\n      setPokemon(data.pokemon);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        {pokemon ? (\r\n          <PokemonData\r\n            pokemon={pokemon}\r\n            userPokemon={userPokemon}\r\n            setUserPokemon={setUserPokemon}\r\n          />\r\n        ) : (\r\n          <SkeletonPokemonData />\r\n        )}\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.section({\r\n  overflow: \"hidden\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  minHeight: \"100vh\",\r\n});\r\n\r\nconst Content = styled.div({\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  boxSizing: \"border-box\",\r\n  padding: \"16px\",\r\n  maxWidth: \"650px\",\r\n  margin: \"0px auto\",\r\n  marginTop: \"60px\",\r\n  // minHeight: \"100vh\",\r\n});\r\n\r\nexport default PokemonDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_POKEMONS } from \"../graphql/Queries\";\r\n\r\nimport PokemonCard from \"../components/PokemonCard\";\r\n\r\nconst UserPokemon = () => {\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  const { data } = useQuery(GET_POKEMONS, {\r\n    variables: { limit: 20 },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const localData = localStorage.getItem(\"_user_pokemon\");\r\n    // setUserPokemon(localData ? JSON.parse(localData) : []);\r\n    if (data) {\r\n      console.log(data.pokemons.results);\r\n      setPokemons(data.pokemons.results);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        {pokemons &&\r\n          pokemons.map((pokemon) => (\r\n            <PokemonCard pokemon={pokemon} key={pokemon.id} />\r\n          ))}\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.section({\r\n  overflow: \"hidden\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  minHeight: \"100vh\",\r\n});\r\n\r\nconst Content = styled.div({\r\n  width: \"100%\",\r\n  minHeight: \"100vh\",\r\n  boxSizing: \"border-box\",\r\n  padding: \"16px\",\r\n  maxWidth: \"650px\",\r\n  marginTop: \"60px\",\r\n});\r\n\r\nexport default UserPokemon;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport PokemonList from \"./pages/PokemonList\";\nimport PokemonDetail from \"./pages/PokemonDetail\";\nimport UserPokemon from \"./pages/UserPokemon\";\n\nfunction App() {\n  return (\n    <main>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <PokemonList />\n        </Route>\n        <Route path=\"/detail/:name\">\n          <PokemonDetail />\n        </Route>\n        <Route path=\"/my-pokemon\">\n          <UserPokemon />\n        </Route>\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport \"./index.css\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://graphql-pokeapi.vercel.app/api/graphql\",\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}